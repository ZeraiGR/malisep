{"version":3,"sources":["01_main.js"],"names":["document","addEventListener","tabs","querySelector","tabsBtn","querySelectorAll","tabsContent","e","target","classList","contains","tabsPath","dataset","forEach","el","remove","add","tabsHandler","path","tabsManager","section","windowWidth","window","innerWidth","div","createElement","style","overflowY","width","height","body","append","scrollWidth","offsetWidth","clientWidth","scrollbarWidth","calcMarginSliders","Swiper","slidesPerView","spaceBetween","navigation","nextEl","prevEl","worksSlider","pagination","type","keyboard","enabled","onlyInViewport","bullets","prevArrow","nextArrow","bulletsList","index","getAttribute","slideTo","changeSlide","realIndex","console","log","worksSliderHandler","Fancybox","bind"],"mappings":"AAAAA,SAASC,iBAAiB,mBAAoB,KACtB,MAChB,MAAMC,EAAOF,SAASG,cAAc,SAC9BC,EAAUJ,SAASK,iBAAiB,cACpCC,EAAcN,SAASK,iBAAiB,kBAE1CH,GACAA,EAAKD,iBAAiB,QAAUM,IAC5B,GAAIA,EAAEC,OAAOC,UAAUC,SAAS,aAAc,CAC1C,MAAMC,EAAWJ,EAAEC,OAAOI,QAAQD,SAClCP,EAAQS,QAASC,IACbA,EAAGL,UAAUM,OAAO,uBAExBf,SACKG,cAAc,oBAAoBQ,OAClCF,UAAUO,IAAI,qBACnBC,EAAYN,MAKxB,MAAMM,EAAeC,IACjBZ,EAAYO,QAASC,IACjBA,EAAGL,UAAUM,OAAO,2BAExBf,SACKG,cAAc,sBAAsBe,OACpCT,UAAUO,IAAI,2BA0G3BG,GAb0B,MACtB,MAAMC,EAAUpB,SAASG,cAAc,oBAEvC,GAAIiB,EAAS,CACT,MAAMC,GACDC,OAAOC,WAAa,KAnBV,MACnB,IAAIC,EAAMxB,SAASyB,cAAc,OAEjCD,EAAIE,MAAMC,UAAY,SACtBH,EAAIE,MAAME,MAAQ,OAClBJ,EAAIE,MAAMG,OAAS,OAEnB7B,SAAS8B,KAAKC,OAAOP,GACrB,IAAIQ,EAAcR,EAAIS,YAAcT,EAAIU,YAGxC,OAFAV,EAAIT,SAEGiB,GAQ6BG,IAAoB,EAEpDf,EAAQM,MAAM,gBAAkBL,EAAc,OAOtDe,GAKsB,IAAIC,OAAO,kBAAmB,CAChDC,cAAe,EACfC,aAAc,GACdC,WAAY,CACRC,OAAQ,uBACRC,OAAQ,0BALhB,MASMC,EAAc,IAAIN,OAAO,gBAAiB,CAC5CC,cAAe,EACfC,aAAc,GACdC,WAAY,CACRC,OAAQ,qBACRC,OAAQ,sBAEZE,WAAY,CACR9B,GAAI,wBACJ+B,KAAM,YAEVC,SAAU,CACNC,SAAS,EACTC,gBAAgB,KAMG,MACvB,MAAMC,EAAUjD,SAASG,cAAc,yBACnC+C,EAAYlD,SAASG,cAAc,sBACnCgD,EAAYnD,SAASG,cAAc,sBACnCiD,EAAcH,EAAQ5C,iBAAiB,wBAC3C,GAAI4C,EAAS,CACTA,EAAQhD,iBAAiB,QAAUM,IAC/B,MAAMC,EAASD,EAAEC,OACb6C,EAAQ7C,EAAO8C,aAAa,cAC5B9C,EAAOC,UAAUC,SAAS,yBAC1B0C,EAAYvC,QAASC,IACjBA,EAAGL,UAAUM,OAAO,YAGxBP,EAAOC,UAAUO,IAAI,UACrB2B,EAAYY,QAAQF,MAI5B,MAAMG,EAAc,KAChBJ,EAAYvC,QAASC,IACjBA,EAAGL,UAAUM,OAAO,YAExB,MAAM0C,EAAYd,EAAYc,UAE9BC,QAAQC,IAAIP,EAAYK,IACxBL,EAAYK,GAAWhD,UAAUO,IAAI,WAGzCkC,EAAUjD,iBAAiB,QAAS,KAChCuD,MAGJL,EAAUlD,iBAAiB,QAAS,KAChCuD,QAKZI,GAIAC,SAASC,KAAK,gCAAiC","file":"../js/main.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    const tabsManager = () => {\r\n        const tabs = document.querySelector('.tabs');\r\n        const tabsBtn = document.querySelectorAll('.tabs__btn');\r\n        const tabsContent = document.querySelectorAll('.tabs__content');\r\n\r\n        if (tabs) {\r\n            tabs.addEventListener('click', (e) => {\r\n                if (e.target.classList.contains('tabs__btn')) {\r\n                    const tabsPath = e.target.dataset.tabsPath;\r\n                    tabsBtn.forEach((el) => {\r\n                        el.classList.remove('tabs__btn--active');\r\n                    });\r\n                    document\r\n                        .querySelector(`[data-tabs-path=\"${tabsPath}\"]`)\r\n                        .classList.add('tabs__btn--active');\r\n                    tabsHandler(tabsPath);\r\n                }\r\n            });\r\n        }\r\n\r\n        const tabsHandler = (path) => {\r\n            tabsContent.forEach((el) => {\r\n                el.classList.remove('tabs__content--active');\r\n            });\r\n            document\r\n                .querySelector(`[data-tabs-target=\"${path}\"]`)\r\n                .classList.add('tabs__content--active');\r\n        };\r\n    };\r\n\r\n    const accordionManager = () => {\r\n        var accordion = (function (element) {\r\n            var _getItem = function (elements, className) {\r\n                // функция для получения элемента с указанным классом\r\n                var element = undefined;\r\n                elements.forEach(function (item) {\r\n                    if (item.classList.contains(className)) {\r\n                        element = item;\r\n                    }\r\n                });\r\n                return element;\r\n            };\r\n            return function () {\r\n                var _mainElement = {}, // .accordion\r\n                    _items = {}, // .accordion-item\r\n                    _contents = {}; // .accordion-item-content\r\n                var _actionClick = function (e) {\r\n                        if (\r\n                            !e.target.classList.contains(\r\n                                'accordion-item-header'\r\n                            )\r\n                        ) {\r\n                            // прекращаем выполнение функции если кликнули не по заголовку\r\n                            return;\r\n                        }\r\n                        e.preventDefault(); // отменям стандартное действие\r\n                        // получаем необходимые данные\r\n                        var header = e.target,\r\n                            item = header.parentElement,\r\n                            itemActive = _getItem(_items, 'show');\r\n                        if (itemActive === undefined) {\r\n                            // добавляем класс show к элементу (в зависимости от выбранного заголовка)\r\n                            item.classList.add('show');\r\n                        } else {\r\n                            // удаляем класс show у ткущего элемента\r\n                            itemActive.classList.remove('show');\r\n                            // если следующая вкладка не равна активной\r\n                            if (itemActive !== item) {\r\n                                // добавляем класс show к элементу (в зависимости от выбранного заголовка)\r\n                                item.classList.add('show');\r\n                            }\r\n                        }\r\n                    },\r\n                    _setupListeners = function () {\r\n                        // добавим к элементу аккордиона обработчик события click\r\n                        _mainElement.addEventListener('click', _actionClick);\r\n                    };\r\n\r\n                return {\r\n                    init: function (element) {\r\n                        _mainElement =\r\n                            typeof element === 'string'\r\n                                ? document.querySelector(element)\r\n                                : element;\r\n                        _items =\r\n                            _mainElement.querySelectorAll('.accordion-item');\r\n                        _setupListeners();\r\n                    },\r\n                };\r\n            };\r\n        })();\r\n\r\n        // инициализируем элемент с id=\"accordion\" как аккордеон\r\n        var accordion1 = accordion();\r\n        accordion1.init('#accordion');\r\n\r\n        document\r\n            .querySelector('select')\r\n            .addEventListener('change', function () {\r\n                document.querySelectorAll('.tab').forEach((n, i) => {\r\n                    n.classList.toggle('active', i === this.selectedIndex);\r\n                });\r\n            });\r\n    };\r\n\r\n    const scrollbarWidth = () => {\r\n        let div = document.createElement('div');\r\n\r\n        div.style.overflowY = 'scroll';\r\n        div.style.width = '50px';\r\n        div.style.height = '50px';\r\n\r\n        document.body.append(div);\r\n        let scrollWidth = div.offsetWidth - div.clientWidth;\r\n        div.remove();\r\n\r\n        return scrollWidth;\r\n    };\r\n\r\n    const calcMarginSliders = () => {\r\n        const section = document.querySelector('.success-history');\r\n\r\n        if (section) {\r\n            const windowWidth =\r\n                (window.innerWidth - 1170 - scrollbarWidth()) / 2;\r\n\r\n            section.style['padding-left'] = windowWidth + 'px';\r\n        }\r\n    };\r\n\r\n    // custom scripts\r\n\r\n    tabsManager();\r\n    calcMarginSliders();\r\n    // accordionManager();\r\n\r\n    // sliders\r\n\r\n    const successSlider = new Swiper('.success-slider', {\r\n        slidesPerView: 4,\r\n        spaceBetween: 20,\r\n        navigation: {\r\n            nextEl: '.success-slide__next',\r\n            prevEl: '.success-slide__prev',\r\n        },\r\n    });\r\n\r\n    const worksSlider = new Swiper('.works-slider', {\r\n        slidesPerView: 3,\r\n        spaceBetween: 20,\r\n        navigation: {\r\n            nextEl: '.works-slide__next',\r\n            prevEl: '.works-slide__prev',\r\n        },\r\n        pagination: {\r\n            el: '.works-slide__counter',\r\n            type: 'fraction',\r\n        },\r\n        keyboard: {\r\n            enabled: true,\r\n            onlyInViewport: false,\r\n        },\r\n    });\r\n\r\n    // const bullet = document.querySelectorAll('.swiper-menu__item');\r\n\r\n    const worksSliderHandler = () => {\r\n        const bullets = document.querySelector('.works-slide__bullets'),\r\n            prevArrow = document.querySelector('.works-slide__prev'),\r\n            nextArrow = document.querySelector('.works-slide__next'),\r\n            bulletsList = bullets.querySelectorAll('.works-slide__bullet');\r\n        if (bullets) {\r\n            bullets.addEventListener('click', (e) => {\r\n                const target = e.target,\r\n                    index = target.getAttribute('data-index');\r\n                if (target.classList.contains('works-slide__bullet')) {\r\n                    bulletsList.forEach((el) => {\r\n                        el.classList.remove('active');\r\n                    });\r\n\r\n                    target.classList.add('active');\r\n                    worksSlider.slideTo(index);\r\n                }\r\n            });\r\n\r\n            const changeSlide = () => {\r\n                bulletsList.forEach((el) => {\r\n                    el.classList.remove('active');\r\n                });\r\n                const realIndex = worksSlider.realIndex;\r\n\r\n                console.log(bulletsList[realIndex]);\r\n                bulletsList[realIndex].classList.add('active');\r\n            };\r\n\r\n            prevArrow.addEventListener('click', () => {\r\n                changeSlide();\r\n            });\r\n\r\n            nextArrow.addEventListener('click', () => {\r\n                changeSlide();\r\n            });\r\n        }\r\n    };\r\n\r\n    worksSliderHandler();\r\n\r\n    // fancybox\r\n\r\n    Fancybox.bind('[data-fancybox=\"works-slide\"]', {});\r\n});\r\n"]}